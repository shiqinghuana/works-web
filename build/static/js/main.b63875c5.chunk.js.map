{"version":3,"sources":["reportWebVitals.js","utils/request.js","api/company.js","component/company/CompanyList.js","component/company/CompanyDescriptions.js","component/company/CompanyDetail.js","layout/BasicLayout.js","component/treemap/TreeMap.js","component/treemap/RedBlackTree.js","config/router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","errCallBack","e","code","msg","post","url","body","init","method","headers","JSON","stringify","console","log","request","Request","fetch","res","json","catch","call","companyQueryAll","companyQuery","columns","dataIndex","valueType","width","title","copyable","tooltip","search","initialValue","filters","onFilter","a","label","value","key","sorter","render","_","b","to","id","initData","data","length","i","CompanyList","props","getData","state","promise","api","setState","tableColumns","map","item","ellipsis","type","config","table","React","createRef","style","height","bordered","actionRef","this","pagination","pageSize","total","rowSelection","span","dataSource","params","sorsort","filter","toolBarRender","Component","number","layout","labelStyle","fontSize","contentStyle","column","CompanyDescriptions","loading","desc","companyId","match","split","message","error","window","location","pathname","borderRight","datasource","companyBackInfos","Item","valueEnum","0","rowKey","htmlType","scrollToFirstError","validateMessages","required","formItemProps","rules","CompanyDetail","s","form","editKey","xid","push","current","setFieldsValue","ref","onFinish","values","undefined","success","warning","name","hidden","Group","options","wrapperCol","offset","TextArea","allowClear","autoSize","minRows","maxRows","showCount","maxLength","placeholder","trigger","minLength","recordCreatorProps","newRecordType","record","Date","now","editable","actionRender","row","defaultDoms","delete","editableKeys","onChange","onClick","BasicLayout","color","logo","route","routes","menuItemRender","dom","path","href","icon","PageContainer","content","renderRoutes","RED","BLACK","Entry","parent","oldValue","Treemap","comparator","fixAfterInsertion","x","root","parentOf","leftOf","y","rightOf","colorOf","setColor","rotateLeft","rotateRight","put","cmp","t","size","cpr","compare","left","setValue","right","Error","k","get","p","r","l","c","sequence","treeHeight","offSet","Math","pow","leftArrowOffSet","rightArrowOffSet","prent","result","sequences","X","Y","copy","deleteEntry","successor","replacement","fixAfterDeletion","sib","ch","remove","getEntry","Circles","text","abs","s1","substring","Fragment","radius","fill","ArrowsRight","x2","y2","x3","y3","x1","y1","char","sqrt","points","strokeWidth","lineCap","pointerLength","pointerWidth","stroke","ArrowsLeft","RedBlack","treeMap","doms","node","px","max","min","insert","onPressEnter","find","border","draggable","component","FormOutlined","exact","SendOutlined","SolutionOutlined","RedBlackTree","RadarChartOutlined","redirect","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b63875c5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst Accept = \"application/json, text/javascript, */*;\";\r\n/**\r\n * 几种header， 默认  application/x-www-form-urlencoded; charset=utf-8编码\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst DefaultContentType = \"application/x-www-form-urlencoded; charset=utf-8\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst FileContentType = \"multipart/form-data\";\r\n\r\nconst JsonType = \"application/json\";\r\n\r\nconst errCallBack = (e) => {\r\n    // 非业务问题固定返回格式\r\n    return {\r\n        code:99,\r\n        msg:e\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line no-use-before-define\r\nexport const get = (url,errCallBack =errCallBack):Promise=>{\r\n    let init = {\r\n        method: 'get'\r\n    }\r\n    let request = new Request(url, init);\r\n    return fetch(request)\r\n        .then((res) => {\r\n            return  res.json()\r\n        })\r\n        .then(e => {return  e})\r\n        .catch(\r\n            e => errCallBack.call(e)\r\n        )\r\n}\r\n\r\n\r\nexport const post = (url,body):Promise=> {\r\n    let init = {\r\n        method: 'post',\r\n        headers: {'Content-Type': JsonType},\r\n        body: JSON.stringify(body)\r\n    }\r\n    console.log(\"请求参数\",body)\r\n    let request = new Request(url, init);\r\n    return fetch(request)\r\n        .then((res) => {\r\n            return res.json()\r\n        })\r\n        .then(e => {\r\n            console.log(e)\r\n            return e\r\n        })\r\n        .catch(\r\n            e => errCallBack.call(e)\r\n        )\r\n}\r\n\r\n//\r\n// export default class MyRequest extends React.Component{\r\n//     url;\r\n//     method;\r\n//     type;\r\n//     body;\r\n//     response;\r\n//     getRequest = () => {\r\n//         let init = {\r\n//             method: 'get'\r\n//         }\r\n//         return new Request(this.url, init)\r\n//     }\r\n//\r\n//\r\n//     postRequest = () => {\r\n//         let init = {\r\n//             method: 'post',\r\n//             headers: {'Content-Type':JsonType},\r\n//             body: JSON.stringify(this.body)\r\n//         }\r\n//         return new Request(this.url, init)\r\n//     }\r\n//\r\n//     fileRequest = (body) => {\r\n//         const formData = new FormData();\r\n//         formData.append('fileName', {...body})\r\n//         this.body = formData;\r\n//         let init = {\r\n//             method: 'post',\r\n//             header: FileContentType, //这里可能要去掉\r\n//             body: this.body\r\n//         }\r\n//         return new Request(this.url, init)\r\n//     }\r\n//\r\n//\r\n//     get(url) {\r\n//         this.url =url\r\n//         return fetch(this.getRequest())\r\n//             .then((res) => {\r\n//                 return  res.json()\r\n//             })\r\n//             .then(e => {return  e})\r\n//             .catch(\r\n//                 e => {\r\n//                     // 非业务问题固定返回格式\r\n//                     return {\r\n//                         code:99,\r\n//                         msg:e.stack\r\n//                     };\r\n//                 }\r\n//             )\r\n//     }\r\n//\r\n//\r\n//     post(url, body){\r\n//         this.url = url;\r\n//         this.body = body;\r\n//         return fetch(this.postRequest())\r\n//             .then((res) => {\r\n//                 return  res.json()\r\n//             })\r\n//             .then(e => {return  e})\r\n//             .catch(\r\n//                 e => {\r\n//                     // 非业务问题固定返回格式\r\n//                     return {\r\n//                         code:99,\r\n//                         msg:e.stack\r\n//                     };\r\n//                 }\r\n//             )\r\n//\r\n//     }\r\n//\r\n// }\r\n//\r\n","import {post}  from \"../utils/request\";\r\n\r\n\r\n\r\n\r\nexport let companyChange =(body)=>  post(\"/works/company/change\",body);\r\n\r\nexport let companyQueryAll = (body) => post(\"/works/company/queryAll\",body)\r\n\r\n\r\nexport let companyQuery = (body) => post(\"/works/company/query\",body)","import * as api from \"../../api/company\";\r\n\r\nimport ProTable from '@ant-design/pro-table';\r\nimport React from \"react\";\r\nimport {Button} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: 'index',\r\n        valueType: 'indexBorder',\r\n        width: 48,\r\n    },\r\n    {\r\n        title: '公司名称',\r\n        dataIndex: 'companyName',\r\n        copyable: true,\r\n        tooltip: \"必填\"\r\n\r\n    },\r\n    {\r\n        title: '公司地址',\r\n        search: false,\r\n        dataIndex: 'companyAddr',\r\n\r\n    },\r\n    {\r\n        title: \"公司类型\",\r\n        dataIndex: 'type',\r\n        valueType: 'select',\r\n        initialValue: \"3\",\r\n        filters: true,\r\n        onFilter: true,\r\n        request: async () => [\r\n            {label: \"内部\", value: \"0\"},\r\n            {label: \"外部\", value: \"1\"},\r\n            {label: \"全部\", value: \"3\"}\r\n        ],\r\n\r\n    },\r\n    {\r\n        title: '操作',\r\n        key: 'action',\r\n        sorter: true,\r\n        valueType: 'option',\r\n        render: (_, b, ...item) => {\r\n            return (<Link to={\"/companyDescriptions/companyId=\" + b.id}> 查看</Link>)\r\n        },\r\n    },\r\n\r\n];\r\n\r\nconst initData = (data) => {\r\n    if (data.length < 1) {\r\n        return [];\r\n    }\r\n    for (let i = 0; i < data.length; i++) {\r\n\r\n        data[i].key = i + 1;\r\n    }\r\n    return data;\r\n};\r\n\r\nlet CompanyList = class Company extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            type: \"3\",\r\n            config: {},\r\n        }\r\n        this.table = React.createRef();\r\n\r\n    }\r\n\r\n\r\n    getData = (body = this.state) => {\r\n\r\n        let promise = api.companyQueryAll(body);\r\n        promise.then((e) => {\r\n                if (e.code === 0) {\r\n                    this.setState({data: initData(e.data)})\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n    tableColumns = columns.map((item: any) => ({\r\n        ...item,\r\n        ellipsis: true,\r\n    }));\r\n\r\n    render() {\r\n        return (\r\n            <ProTable\r\n                style={{height:'95vh'}}\r\n                bordered\r\n                actionRef={this.table}\r\n                pagination={{pageSize: 5, total: 100}}\r\n                {...this.state.config}\r\n                rowSelection={{}}\r\n                // tableAlertRender={(a) =>{\r\n                //     return <div>\r\n                //         已选择{a.selectedRows.length}项\r\n                //         <Button onClick={this.table.current.reload}>全部删除</Button>\r\n                //     </div>\r\n                // }}\r\n                columns={this.tableColumns}\r\n                search={{span: 3}}\r\n                dataSource={this.state.data}\r\n                request={(params, sorsort, filter) => {\r\n                    this.getData(params)\r\n                }\r\n                }\r\n                toolBarRender={() =>\r\n                    <Link to={\"/ts/companyDetail\"}>\r\n                        <Button type={\"primary\"} key={\"new\"}>\r\n                            新建公司\r\n                        </Button>\r\n                    </Link>\r\n\r\n\r\n                }\r\n\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n};\r\nexport default CompanyList;","import ProDescriptions from '@ant-design/pro-descriptions'\r\nimport React from \"react\";\r\nimport {number} from \"prop-types\";\r\nimport {companyQuery} from \"../../api/company\";\r\nimport {message} from \"antd\";\r\nimport ProTable from '@ant-design/pro-table';\r\nimport {Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {Space} from \"antd\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: 'index',\r\n        valueType: 'indexBorder',\r\n        width: 48,\r\n    },\r\n    {\r\n        title: \"银行名称\",\r\n        dataIndex: \"backName\",\r\n    },\r\n    {\r\n        title: \"支行名称\",\r\n        dataIndex: \"branchBackName\",\r\n    },\r\n    {\r\n        title: \"收款户名\",\r\n        dataIndex: \"cardName\",\r\n        valueType: \"progress\",\r\n    },\r\n    {\r\n        title: \"账号\",\r\n        dataIndex: \"cardId\",\r\n    },\r\n    {\r\n        title: \"备注\",\r\n        dataIndex: \"mark\",\r\n    },\r\n\r\n\r\n]\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst Company = {\r\n    id: number,\r\n    companyName: String,\r\n    companyAddr: String,\r\n    companyPhone: String,\r\n    mark: String,\r\n    type: String,\r\n    updataTime: String,\r\n    insertTime: String,\r\n    delete: number,\r\n}\r\n\r\n\r\nconst config = {\r\n    layout: \"horizontal\", // 布局，水平垂直\r\n    labelStyle: {fontSize: 20, width: \"10em\"}, // label 框的属性\r\n    contentStyle: {fontSize: 20}, // 内容框属性\r\n    column: 1,// 一行展示几个框\r\n}\r\nexport default class CompanyDescriptions extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: config,\r\n            loading: false,\r\n        }\r\n        this.desc = React.createRef();\r\n\r\n        console.log(\"props\",props)\r\n        let e;\r\n        this.companyId = (e=this.props.match.params.companyId)&& e.split(\"=\")[1]\r\n        if (!this.companyId) {\r\n            message.error(\"companyId 为空，随机给一个\")\r\n            window.location.pathname = \"/ts/companyDescriptions/companyId=44\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={{width: '50%',height:\"95vh\", borderRight: \"solid 1px\"}}>\r\n                <ProDescriptions\r\n                    loading={this.state.loading}\r\n                    actionRef={this.desc}\r\n                    request={() => {\r\n                        this.setState({loading: true})\r\n                        companyQuery({id: this.companyId}).then(\r\n                            (res) => {\r\n                                if (res.code === 0) {\r\n                                    console.log(res.data)\r\n                                    this.setState({\r\n                                        res: res.data,\r\n                                        loading: false,\r\n                                        datasource: res.data.companyBackInfos\r\n                                    })\r\n                                }\r\n                            }\r\n                        )\r\n                    }}\r\n                    dataSource={this.state.res}\r\n\r\n\r\n                    {...this.state.config}\r\n\r\n                >\r\n                    <ProDescriptions.Item dataIndex={['company', 'companyName']} label={\"公司名称\"}/>\r\n                    <ProDescriptions.Item dataIndex={['company', 'companyAddr']} label={\"公司地址\"}/>\r\n                    <ProDescriptions.Item dataIndex={['company', 'companyPhone']} label={\"公司电话\"}/>\r\n                    <ProDescriptions.Item dataIndex={['company', 'mark']} label={\"公司备注信息\"}/>\r\n                    <ProDescriptions.Item valueType={\"select\"} dataIndex={['company', 'type']} valueEnum={{\r\n                        0: \"内部公司\"\r\n                    }} label={\"公司类型\"}/>\r\n\r\n                    <ProDescriptions.Item valueType={\"dateTime\"} dataIndex={['company', 'updataTime']} label={\"更新时间\"}/>\r\n\r\n                </ProDescriptions>\r\n                <br/>\r\n                <p>银行卡信息</p>\r\n                <ProTable\r\n                    rowKey={\"id\"}\r\n                    bordered\r\n                    columns={columns}\r\n                    search={false}\r\n                    toolBarRender={false}\r\n                    dataSource={this.state.datasource}\r\n                >\r\n\r\n                </ProTable>\r\n                <br/>\r\n                <br/>\r\n                <Space>\r\n                    <Link to={\"/ts/companyList\"}>\r\n                        <Button type={\"primary\"} > 返回列表</Button>\r\n                    </Link>\r\n\r\n                   <Link to={\"/ts/companyDetail/companyId=\" +  this.companyId}>\r\n                       <Button type={\"button\"} htmlType={\"change\"}> 修改</Button>\r\n                   </Link>\r\n                </Space>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport ProForm, {\r\n    ProFormText, ProFormSelect,\r\n} from \"@ant-design/pro-form\";\r\nimport {EditableProTable} from '@ant-design/pro-table';\r\nimport {number} from \"prop-types\";\r\nimport {Form} from \"antd\";\r\nimport {Input} from \"antd\";\r\nimport {Button} from \"antd\";\r\nimport {companyChange} from \"../../api/company\";\r\nimport {message} from \"antd\";\r\nimport {companyQuery} from \"../../api/company\";\r\n\r\n\r\n\r\n/*\r\n* proform 配置信息\r\n* */\r\nconst config = {\r\n\r\n    layout: \"vertical \",\r\n    scrollToFirstError: true,\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    validateMessages: {required: \"'${label}' 是必填字段\"},\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\n* 后端模型\r\n* */\r\n\r\nconst Company = {\r\n    id: number,\r\n    companyName: String,\r\n    companyAddr: String,\r\n    companyPhone: String,\r\n    mark: String,\r\n    type: String,\r\n    updataTime: String,\r\n    insertTime: String,\r\n    delete: number,\r\n}\r\n\r\nconst formItemProps = {\r\n    rules: [\r\n        {\r\n            required: true,\r\n            message: '此项为必填项',\r\n        },\r\n    ],\r\n}\r\nconst columns = [\r\n    {\r\n        dataIndex: 'index',\r\n        valueType: 'indexBorder',\r\n        width: 48,\r\n    },\r\n    {\r\n        title: \"银行名称\",\r\n        dataIndex: \"backName\",\r\n        formItemProps: formItemProps\r\n    },\r\n    {\r\n        title: \"支行名称\",\r\n        dataIndex: \"branchBackName\",\r\n        formItemProps: formItemProps\r\n    },\r\n    {\r\n        title: \"收款户名\",\r\n        valueType: \"progress\",\r\n        dataIndex: \"cardName\",\r\n        formItemProps: formItemProps\r\n    },\r\n    {\r\n        title: \"账号\",\r\n        dataIndex: \"cardId\",\r\n        formItemProps: formItemProps\r\n    },\r\n    {\r\n        title: \"备注\",\r\n        dataIndex: \"mark\",\r\n    },\r\n    {\r\n        title: \"操作\",\r\n        valueType: 'option',\r\n        render: () => {\r\n            return null;\r\n        },\r\n    }\r\n\r\n]\r\nconst companyBackInfos = {\r\n    backName: String,\r\n    branchBackName: String,\r\n    cardName: String,\r\n    cardId: String,\r\n    mark: String,\r\n}\r\n\r\n\r\n/*\r\n* 请求模型\r\n* */\r\n// eslint-disable-next-line no-unused-vars\r\nconst companyVo = {\r\n    type: number,\r\n    companyid: number,\r\n    company: Company,\r\n    companyBackInfos\r\n}\r\n\r\nclass CompanyDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: config,\r\n            res: {},\r\n            loading: false,\r\n            datasource: [],\r\n            type:0 // 新建 1 更新\r\n        }\r\n        console.log(props)\r\n        this.form = React.createRef()\r\n        this.table = React.createRef()\r\n    }\r\n    componentDidMount() {\r\n        const a = this.props.match.params.companyId\r\n        if (a) {\r\n            this.setState({loading: true})\r\n            companyQuery({id: a.split(\"=\")[1]}).then(\r\n                (res) => {\r\n                    if (res.code === 0) {\r\n                        this.setState({\r\n                            res: res.data,\r\n                            loading: false,\r\n                            datasource: res.data.companyBackInfos,\r\n                        }, () => {\r\n                            let a = this.state.datasource;\r\n                            let editKey = []\r\n                            for (let i = 0; i < a.length; i++) {\r\n                                a[i].xid = i;\r\n                                editKey.push(i)\r\n                            }\r\n                            this.setState({editKey})  // 此处需要维护一个数组，内容为表格编辑的rowkey，因为后端不直接提供rowkey，需要自己处理\r\n                            this.setState({type:1})\r\n                            this.form.current.setFieldsValue(this.state.res)  //一定要在这里设置。不能通过initvalue\r\n                            // 因为 initvalue只有在第一次加载生效，而setstate是异步的，拿不到数据，这里设置了，是全局的\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    s = \"companyDescriptions\";\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                ref={this.form}\r\n                {...this.state.config}\r\n                onFinish={\r\n                    (values) => {\r\n                        console.log(values)\r\n                        values.type = this.state.type;\r\n\r\n                        if (values.companyBackInfos === undefined) {\r\n                            message.warning(\"至少提交一条银行卡数据\")\r\n                            return\r\n                        }\r\n                        companyChange(values).then(\r\n                            (e) => {\r\n                                if (e.code === 0) {\r\n                                    message.success(\"提交成功\")\r\n                                    window.location.pathname = \"/ts/\" + this.s + \"/companyId=\" + e.data\r\n\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            >\r\n                <ProFormText name={[\"company\", \"id\"]} hidden\r\n                />\r\n                <ProForm.Group>\r\n\r\n                    <ProFormText name={[\"company\", \"companyName\"]} label={\"公司名称\"} width={\"sm\"}\r\n                                 rules={[{required: true}]}/>\r\n\r\n                    <ProFormText name={[\"company\", \"companyAddr\"]}\r\n                                 label={\"公司地址\"}\r\n                                 width={\"xl\"}\r\n                                 rules={[{required: true}]}\r\n\r\n                    />\r\n\r\n                </ProForm.Group>\r\n\r\n                <ProForm.Group>\r\n                    <ProFormText name={[\"company\", \"companyPhone\"]} label={\"公司电话\"} width={\"xl\"}\r\n                                 rules={[{required: true}]}/>\r\n                    <ProFormSelect name={[\"company\", \"type\"]}\r\n                                   label={\"公司类型\"}\r\n                                   width={\"xl\"}\r\n                                   rules={[{required: true}]}\r\n                                   options={[{\r\n                                       value: \"0\",\r\n                                       label: \"内部\"\r\n                                   },\r\n                                       {\r\n                                           value: \"1\",\r\n                                           label: \"外部\"\r\n                                       }]}\r\n                    />\r\n                </ProForm.Group>\r\n\r\n                <Form.Item label={\"备注\"} name={[\"company\", \"mark\"]} wrapperCol={{span: 11, offset: 0}}>\r\n                    {/* wrapperCol  设置布局 span 列框 offset 起始列*/}\r\n                    <Input.TextArea\r\n\r\n                        allowClear\r\n                        autoSize={{minRows: 5, maxRows: 10}}\r\n                        showCount={true}\r\n                        maxLength={1000}\r\n                        placeholder=\"请输入备注，最大长度1000字\"\r\n\r\n                    />\r\n                </Form.Item>\r\n\r\n                <ProForm.Item label={\"银行信息\"}\r\n                              name={\"companyBackInfos\"}\r\n                              trigger=\"onValuesChange\"\r\n\r\n                >\r\n                    {/* trigger == \t设置收集字段值变更的时*/}\r\n                    <EditableProTable\r\n                        actionRef={this.table}\r\n                        bordered // 显示边框\r\n                        columns={columns} //列名，可以设置校验规则\r\n                        rowKey=\"xid\"\r\n                        maxLength={5} // 设置最大行数\r\n                        minLength={1}\r\n                        recordCreatorProps={{\r\n                            // 这里设置生成纪录的规则\r\n                            // 这里设置 dataSource 才能用下面defaultDoms 的参数\r\n                            newRecordType: 'dataSource',\r\n                            record: () => ({  // 生成行的下标，如果不设置，自动拿index，删除时会有bug\r\n                                xid: Date.now(),\r\n                            }),\r\n\r\n                        }}\r\n                        editable={{\r\n\r\n                            type: 'multiple',\r\n                            actionRender: (row, config, defaultDoms) => {\r\n                                return [defaultDoms.delete];\r\n                            },\r\n                            editableKeys: this.state.editKey,\r\n                            onChange: (editKey) => {\r\n                                this.setState({editKey})\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </ProForm.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type={\"primary\"} htmlType={\"submit\"} onClick={() => {\r\n                        console.log(\"ssss\", this.table)\r\n                    }}> 提交</Button>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CompanyDetail;","import React from \"react\";\r\nimport {renderRoutes} from \"react-router-config\";\r\nimport ProLayout, {PageContainer} from '@ant-design/pro-layout';\r\nimport routes from \"../config/router\";\r\n\r\n\r\n\r\nexport default class BasicLayout extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ProLayout\r\n                title={<p style={{fontSize: 25, color: \"white\"}}>模版页面</p>}\r\n                logo={false}\r\n                route={{routes}}\r\n\r\n                menuItemRender={(item, dom) => {\r\n                    if (item.path) {\r\n                        return <a href={item.path}>{item.icon}{dom}</a>\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <PageContainer\r\n                    content={renderRoutes(this.props.route.routes)}\r\n                >\r\n\r\n                </PageContainer>\r\n            </ProLayout>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nconst RED = false;\r\nconst BLACK = true;\r\n\r\n// 数据结构\r\nclass Entry {\r\n    key;\r\n    value;\r\n    left;\r\n    right;\r\n    parent;\r\n    color = BLACK;\r\n\r\n    /**\r\n     * Make a new cell with given key, value, and parent, and with\r\n     * {@code null} child links, and BLACK color.\r\n     */\r\n    constructor(key, value, parent) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n    }\r\n\r\n    /**\r\n     * Returns the key.\r\n     *\r\n     * @return the key\r\n     */\r\n    getKey() {\r\n        return this.key;\r\n    }\r\n\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n\r\n    setValue(value) {\r\n        let oldValue = this.value;\r\n        this.value = value;\r\n        return oldValue;\r\n    }\r\n\r\n\r\n}\r\n\r\n// 红黑树的实现类\r\nexport class Treemap {\r\n    constructor(comparator = null) {\r\n        this.comparator = comparator;\r\n        this.root = null // 初始化值\r\n        this.size = 0; // 这个size用于记录节点值。用于渲染画布大小\r\n    }\r\n\r\n    // 插入后平衡\r\n    fixAfterInsertion = (x) => {\r\n        x.color = RED;\r\n        // 如果 爸爸是红色且自己不是根节点则开始平衡\r\n        while (x != null && x !== this.root && x.parent.color === RED) {\r\n            if (this.parentOf(x) === this.leftOf(this.parentOf(this.parentOf(x)))) {\r\n                // 如果爸爸 是 爷爷的左孩子\r\n                // 拿到右孩子的节点 ---叔叔\r\n                let y = this.rightOf(this.parentOf(this.parentOf(x)));\r\n\r\n                // 如果叔叔是红色的，说明爷爷是黑色的，交换颜色\r\n                if (this.colorOf(y) === RED) {\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(y, BLACK);\r\n                    this.setColor(this.parentOf(this.parentOf(x)), RED);\r\n                    x = this.parentOf(this.parentOf(x));\r\n                } else {// 如果叔叔是黑色的\r\n                    //如果自己是右孩子\r\n                    if (x === this.rightOf(this.parentOf(x))) {\r\n                        // 对爸爸进行左旋一次\r\n                        x = this.parentOf(x);\r\n                        this.rotateLeft(x);\r\n                    }\r\n\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(this.parentOf(this.parentOf(x)), RED);\r\n                    // 对爷爷进行一次右旋\r\n                    this.rotateRight(this.parentOf(this.parentOf(x)));\r\n                }\r\n            } else {\r\n                // 爸爸是爷爷的右孩子，拿到左侧的叔叔节点\r\n                let y = this.leftOf(this.parentOf(this.parentOf(x)));\r\n                // 如果叔叔是红色的，啥都不用做，交换爸爸，叔叔，爷爷的颜色\r\n                if (this.colorOf(y) === RED) {\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(y, BLACK);\r\n                    this.setColor(this.parentOf(this.parentOf(x)), RED);\r\n                    x = this.parentOf(this.parentOf(x));\r\n                } else {\r\n                    // 如果叔叔是黑的的\r\n                    // 如果自己是爸爸的左界定啊\r\n                    if (x === this.leftOf(this.parentOf(x))) {\r\n                        x = this.parentOf(x);\r\n                        // 对爸爸进行一次右旋\r\n                        this.rotateRight(x);\r\n                    }\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(this.parentOf(this.parentOf(x)), RED);\r\n                    // 对爷爷进行一次左旋\r\n                    this.rotateLeft(this.parentOf(this.parentOf(x)));\r\n                }\r\n            }\r\n        }\r\n        this.root.color = BLACK;\r\n    }\r\n\r\n    put = (key, value) => {\r\n        let t = this.root;\r\n        if (t === null) {\r\n            this.root = new Entry(key, value, null);\r\n            this.size = 1;\r\n            return null;\r\n        }\r\n        let cmp;\r\n        let parent;\r\n        // split comparator and comparable paths\r\n        let cpr = this.comparator;\r\n        if (cpr != null) {\r\n            do {\r\n                parent = t;\r\n                cmp = cpr.compare(key, t.key);\r\n                if (cmp < 0)\r\n                    t = t.left;\r\n                else if (cmp > 0)\r\n                    t = t.right;\r\n                else\r\n                    return t.setValue(value);\r\n            } while (t != null);\r\n        } else {\r\n            if (key == null)\r\n                throw new Error();\r\n            let k = key;\r\n            do {\r\n                parent = t;\r\n                // 这里做比较，支持int类型\r\n                cmp = k - (t.key);\r\n                if (cmp < 0)\r\n                    t = t.left;\r\n                else if (cmp > 0)\r\n                    t = t.right;\r\n                else\r\n                    return t.setValue(value);\r\n            } while (t != null);\r\n        }\r\n        let e = new Entry(key, value, parent);\r\n        if (cmp < 0)\r\n            parent.left = e;\r\n        else\r\n            parent.right = e;\r\n        this.fixAfterInsertion(e);\r\n        this.size++;\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    get = (key, k = this.root) => {\r\n        debugger\r\n        if (!k) {\r\n            return false;\r\n        }\r\n        if (k.key === key) {\r\n            return true;\r\n        }\r\n        if (k.key - key>0) {\r\n            return this.get(key, k.left || false)\r\n        }\r\n        return this.get(key, k.right || false)\r\n    }\r\n\r\n    rotateLeft = (p) => {\r\n        if (p != null) {\r\n            let r = p.right;\r\n            p.right = r.left;\r\n            if (r.left != null)\r\n                r.left.parent = p;\r\n            r.parent = p.parent;\r\n            if (p.parent == null)\r\n                this.root = r;\r\n            else if (p.parent.left === p)\r\n                p.parent.left = r;\r\n            else\r\n                p.parent.right = r;\r\n            r.left = p;\r\n            p.parent = r;\r\n        }\r\n    }\r\n\r\n    rotateRight = (p) => {\r\n        if (p !== null) {\r\n            let l = p.left;\r\n            p.left = l.right;\r\n            if (l.right != null) l.right.parent = p;\r\n            l.parent = p.parent;\r\n            if (p.parent == null)\r\n                this.root = l;\r\n            else if (p.parent.right === p)\r\n                p.parent.right = l;\r\n            else p.parent.left = l;\r\n            l.right = p;\r\n            p.parent = l;\r\n        }\r\n    }\r\n\r\n    colorOf = (p) => {\r\n        return (p == null ? BLACK : p.color);\r\n    }\r\n\r\n    parentOf = (p) => {\r\n        return (p == null ? null : p.parent);\r\n    }\r\n\r\n    setColor = (p, c) => {\r\n        if (p != null)\r\n            p.color = c;\r\n    }\r\n\r\n    leftOf = (p) => {\r\n        return (p == null) ? null : p.left;\r\n    }\r\n\r\n    rightOf = (p) => {\r\n        return (p == null) ? null : p.right;\r\n    }\r\n\r\n\r\n    /**\r\n     * 二叉树的层序遍历，这里要确定好每个节点的 row col 坐标\r\n     * 以及确定 leftArrow rightArrow 是否要 渲染\r\n     * 默认更节点行列坐标 [0,0]\r\n     * @param treeHeight 树最高层数\r\n     * 公式。以root为节点\r\n     * root 列坐标 为 2^(treeHeight-1) 这里要不要-1 看效果，如果以0开头，就减1\r\n     * 子节点坐标以父节点为参考\r\n     * 左节点 prentCol - 2^(treeHeight-row)\r\n     *  右节点 prentCol + 2^(treeHeight-row)\r\n     *\r\n     * @returns {[]}\r\n     */\r\n    sequence = (treeHeight) => {\r\n        if (this.root === null) {\r\n            return\r\n        }\r\n        this.root.offSet = [1, Math.pow(2, treeHeight - 1)]\r\n        // 重置，解决删除的时候会保留箭头的bug\r\n        this.root.leftArrowOffSet = null\r\n        this.root.rightArrowOffSet = null\r\n        let result = []; // 返回结果集合 fix bug\r\n        let sequences = [this.root]; // 每一层的集合\r\n        let e = [], left, right, prent;\r\n\r\n        while (sequences.length > 0 || e.length > 0) {\r\n            for (let i = 0; i < sequences.length; i++) {\r\n\r\n                prent = sequences[i]\r\n                let [X, Y] = prent.offSet\r\n                if ((left = prent.left)) {\r\n                    left.offSet = [X + 1, Y - Math.pow(2, treeHeight - X - 1)] // 根据父节点计算出子节点坐标\r\n                    prent.leftArrowOffSet = left.offSet // 左像箭头坐标\r\n                    left.leftArrowOffSet = null\r\n                    left.rightArrowOffSet = null\r\n                    e.push(left)\r\n                }\r\n                if ((right = prent.right)) {\r\n                    right.offSet = [X + 1, Y + Math.pow(2, treeHeight - X - 1)]\r\n                    prent.rightArrowOffSet = right.offSet // 右向箭头坐标\r\n                    right.leftArrowOffSet = null\r\n                    right.rightArrowOffSet = null\r\n                    e.push(right)\r\n                }\r\n            }\r\n            let copy = [...sequences] // 此处要做拷贝，直接push是引用\r\n            result.push(copy)\r\n            sequences = e;\r\n            e = []\r\n        }\r\n        return result;\r\n    }\r\n\r\n    deleteEntry = (p) => {\r\n        this.size--;\r\n        // If strictly internal, copy successor's element to p and then make p\r\n        // point to successor.\r\n        if (p.left != null && p.right != null) {\r\n            let s = this.successor(p);\r\n            p.key = s.key;\r\n            p.value = s.value;\r\n            p = s;\r\n        } // p has 2 children\r\n\r\n// Start fixup at replacement node, if it exists.\r\n        let replacement = (p.left != null ? p.left : p.right);\r\n\r\n        if (replacement != null) {\r\n            // Link replacement to parent\r\n            replacement.parent = p.parent;\r\n            if (p.parent == null)\r\n                this.root = replacement;\r\n            else if (p === p.parent.left)\r\n                p.parent.left = replacement;\r\n            else\r\n                p.parent.right = replacement;\r\n            // Null out links so they are OK to use by fixAfterDeletion.\r\n            p.left = p.right = p.parent = null;\r\n            // Fix replacement\r\n            if (p.color === BLACK)\r\n                this.fixAfterDeletion(replacement);\r\n        } else if (p.parent == null) { // return if we are the only node.\r\n            this.root = null;\r\n        } else { //  No children. Use self as phantom replacement and unlink.\r\n            if (p.color === BLACK)\r\n                this.fixAfterDeletion(p);\r\n            if (p.parent != null) {\r\n                if (p === p.parent.left)\r\n                    p.parent.left = null;\r\n                else if (p === p.parent.right)\r\n                    p.parent.right = null;\r\n                p.parent = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fixAfterDeletion = (x) => {\r\n        while (x !== this.root && this.colorOf(x) === BLACK) {\r\n            if (x === this.leftOf(this.parentOf(x))) {\r\n                let sib = this.rightOf(this.parentOf(x));\r\n\r\n                if (this.colorOf(sib) === RED) {\r\n                    this.setColor(sib, BLACK);\r\n                    this.setColor(this.parentOf(x), RED);\r\n                    this.rotateLeft(this.parentOf(x));\r\n                    sib = this.rightOf(this.parentOf(x));\r\n                }\r\n\r\n                if (this.colorOf(this.leftOf(sib)) === BLACK &&\r\n                    this.colorOf(this.rightOf(sib)) === BLACK) {\r\n                    this.setColor(sib, RED);\r\n                    x = this.parentOf(x);\r\n                } else {\r\n                    if (this.colorOf(this.rightOf(sib)) === BLACK) {\r\n                        this.setColor(this.leftOf(sib), BLACK);\r\n                        this.setColor(sib, RED);\r\n                        this.rotateRight(sib);\r\n                        sib = this.rightOf(this.parentOf(x));\r\n                    }\r\n                    this.setColor(sib, this.colorOf(this.parentOf(x)));\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(this.rightOf(sib), BLACK);\r\n                    this.rotateLeft(this.parentOf(x));\r\n                    x = this.root;\r\n                }\r\n            } else { // symmetric\r\n                let sib = this.leftOf(this.parentOf(x));\r\n\r\n                if (this.colorOf(sib) === RED) {\r\n                    this.setColor(sib, BLACK);\r\n                    this.setColor(this.parentOf(x), RED);\r\n                    this.rotateRight(this.parentOf(x));\r\n                    sib = this.leftOf(this.parentOf(x));\r\n                }\r\n\r\n                if (this.colorOf(this.rightOf(sib)) === BLACK &&\r\n                    this.colorOf(this.leftOf(sib)) === BLACK) {\r\n                    this.setColor(sib, RED);\r\n                    x = this.parentOf(x);\r\n                } else {\r\n                    if (this.colorOf(this.leftOf(sib)) === BLACK) {\r\n                        this.setColor(this.rightOf(sib), BLACK);\r\n                        this.setColor(sib, RED);\r\n                        this.rotateLeft(sib);\r\n                        sib = this.leftOf(this.parentOf(x));\r\n                    }\r\n                    this.setColor(sib, this.colorOf(this.parentOf(x)));\r\n                    this.setColor(this.parentOf(x), BLACK);\r\n                    this.setColor(this.leftOf(sib), BLACK);\r\n                    this.rotateRight(this.parentOf(x));\r\n                    x = this.root;\r\n                }\r\n            }\r\n        }\r\n        this.setColor(x, BLACK);\r\n    }\r\n\r\n    successor = (t) => {\r\n        if (t == null)\r\n            return null;\r\n        else if (t.right != null) {\r\n            let p = t.right;\r\n            while (p.left != null)\r\n                p = p.left;\r\n            return p;\r\n        } else {\r\n            let p = t.parent;\r\n            let ch = t;\r\n            while (p != null && ch === p.right) {\r\n                ch = p;\r\n                p = p.parent;\r\n            }\r\n            return p;\r\n        }\r\n    }\r\n\r\n\r\n    remove = (key) => {\r\n        let p = this.getEntry(key);\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        let oldValue = p.value;\r\n        this.deleteEntry(p);\r\n        return oldValue;\r\n    }\r\n\r\n    getEntry = (key) => {\r\n        // Offload comparator-based version for sake of performance\r\n        if (key == null) {\r\n            return null;\r\n        }\r\n        let k = key;\r\n        let p = this.root;\r\n        while (p != null) {\r\n            let cmp = k - (p.key);\r\n            if (cmp < 0) {\r\n                p = p.left;\r\n            } else if (cmp > 0) {\r\n                p = p.right;\r\n            } else {\r\n                return p;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport {Stage, Layer, Text} from 'react-konva';\r\n\r\nimport {Circle} from \"react-konva\";\r\nimport {Arrow} from \"react-konva\";\r\nimport {Button} from \"antd\";\r\n\r\nimport {Space} from \"antd\";\r\nimport {InputNumber} from \"antd\";\r\n\r\nimport {Tooltip} from \"antd\";\r\nimport {Treemap} from \"./TreeMap\";\r\nimport {message} from \"antd\";\r\n\r\n// 绘制圆形及文案\r\n// 文案为 矩形，左上角坐标为圆心坐标减去半斤，\r\n// 经试验  x向下偏移3px\r\n// y坐标上浮 5px 效果最佳\r\n/**\r\n * x 行 对应纵坐标  长度\r\n * y 列 对应横坐标长度\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction Circles(props) {\r\n    const {r, x, y, text, color} = props\r\n\r\n    const s = \"00000\"+Math.abs(text);\r\n\r\n    const s1 =  text>=0?s.substring(s.length-5,s.length):\"-\"+s.substring(s.length-4,s.length)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Circle radius={r} x={y} y={x} fill={color}/>\r\n            <Text text={s1} x={y - r + 3} y={x - 5} fill={\"white\"}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n/**\r\n * 绘制箭头图像，根据两个圆的圆心坐标，计算出直线与圆交点处的坐标\r\n * 作为箭头的起始坐标\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction ArrowsRight(props) {\r\n\r\n    const {r, x, y, x1, y1} = props\r\n    let x2, y2, x3, y3; // 箭头指向下方球的坐标 根据相似三角形等比计算\r\n    if (x1) {\r\n        let b = (x1 - x) / (y1 - y)\r\n        let char = Math.sqrt(r * r / (b + 1))\r\n        x2 = y+char\r\n        y2 = x+b*char\r\n        x3 = y1-char\r\n        y3 = x1 - b*char\r\n    }\r\n    return (\r\n        <Arrow points={[x2, y2, x3, y3]} strokeWidth={1}\r\n               lineCap={\"round\"}\r\n               pointerLength={5}\r\n               pointerWidth={5}\r\n               fill={\"black\"} stroke={\"black\"}\r\n        />\r\n        )\r\n}\r\n\r\n\r\nfunction ArrowsLeft(props) {\r\n    debugger;\r\n    const {r, x, y, x1, y1} = props\r\n    let x2, y2, x3, y3; // 箭头指向下方球的坐标 根据相似三角形等比计算\r\n    if (x1) {\r\n        let b = (x1-x ) / (y - y1)\r\n        let char = Math.sqrt(r * r / (b + 1))\r\n        x2 = y-char\r\n        y2 = x+b*char\r\n        x3 = y1+char\r\n        y3 = x1 - b*char\r\n    }\r\n    return (\r\n        <Arrow points={[x2, y2, x3, y3]} strokeWidth={1}\r\n               lineCap={\"round\"}\r\n               pointerLength={5}\r\n               pointerWidth={5}\r\n               fill={\"black\"} stroke={\"black\"}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n// 适配1500*900 屏幕 横向最大30*50 纵向17*50 半径固定20 横纵间距固定10\r\n\r\n\r\nexport default class RedBlack extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            r: 20,// 圆的半径\r\n            px: 50,\r\n            treeMap: new Treemap(),\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 只要key，value都是undefined\r\n     * 直接调用treemap中的put方法\r\n     * @param value\r\n     */\r\n    put = (value) => {\r\n        if (!value) {\r\n            message.warning(\"请输入数字\")\r\n            return\r\n        }\r\n        if (this.state.treeMap.get(value)){\r\n            message.warning(value+\"已存在\")\r\n            return\r\n        }\r\n        this.setState((state) =>{\r\n            state.treeMap.put(value);\r\n            return state;\r\n        } )\r\n    }\r\n\r\n    get = (key)=>{\r\n        if (!key) {\r\n            message.warning(\"请输入数字\")\r\n            return\r\n        }\r\n\r\n         this.state.treeMap.get(key)?message.success(\"存在key:\"+key) :message.error(\"不存在key:\"+key)\r\n    }\r\n\r\n    remove = (key)=>{\r\n        if (!key) {\r\n            message.warning(\"请输入数字\")\r\n            return\r\n        }\r\n        if (!this.state.treeMap.get(key)){\r\n            message.warning(key+\"不存在,请确认\")\r\n            return\r\n        }\r\n        this.setState((state)=>{\r\n            state.treeMap.remove(key)\r\n            return state\r\n        })\r\n}\r\n    /**\r\n     * 计算出需要渲染的dom数组\r\n     * @param treeHeight 树高固定5\r\n     */\r\n    dom = (treeHeight = 5)=>{\r\n        debugger\r\n        let sequences = this.state.treeMap.sequence(treeHeight); // 拿到层序遍历的二维数组\r\n        if (!sequences){return }\r\n        let doms = []\r\n        for (const sequence of sequences) {\r\n            for (const node of sequence) {\r\n\r\n                doms.push(<Circles key={doms.length} r={this.state.r}\r\n                                    x={node.offSet[0]*this.state.px}\r\n                                    y={node.offSet[1]*this.state.px}\r\n                                    text={node.key}\r\n                                    color={node.color?\"black\":\"red\"}\r\n                />)\r\n                node.leftArrowOffSet && doms.push(\r\n                    <ArrowsLeft\r\n                        key={doms.length}\r\n                        r={this.state.r}\r\n                        x={node.offSet[0]*this.state.px}\r\n                        y={node.offSet[1]*this.state.px}\r\n                        x1={node.leftArrowOffSet[0]*this.state.px}\r\n                        y1={node.leftArrowOffSet[1]*this.state.px}\r\n                    />\r\n                )\r\n\r\n                node.rightArrowOffSet && doms.push(\r\n                    <ArrowsRight\r\n                        key={doms.length}\r\n                        r={this.state.r}\r\n                        x={node.offSet[0]*this.state.px}\r\n                        y={node.offSet[1]*this.state.px}\r\n                        x1={node.rightArrowOffSet[0]*this.state.px}\r\n                        y1={node.rightArrowOffSet[1]*this.state.px}\r\n                    />\r\n                )\r\n            }\r\n\r\n        }\r\n        console.log(doms)\r\n        return doms\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Space>\r\n                    <InputNumber\r\n                        allowClear={true}\r\n                        max={99999} min={-9999} ref={this.insert = React.createRef()}\r\n                                 onPressEnter={\r\n                                     (e) => {\r\n                                         this.put(this.insert.current.value)\r\n                                     }\r\n                                 }\r\n                        onClick={() =>{\r\n                            this.insert.current.value = null\r\n                        }}\r\n\r\n                    />\r\n                    <Tooltip title={\"为了布局展示优美，输入长度不要超过5位,总节点不多于31\"}>\r\n                        <Button type={\"primary\"} onClick={() => this.put(this.insert.current.value)}> 添加</Button>\r\n                    </Tooltip>\r\n\r\n                    <InputNumber max={99999} min={-9999} ref={this.delete = React.createRef()}\r\n                                 onPressEnter={\r\n                                     (e) => this.remove( this.delete.current.value )\r\n                                 }\r\n                                 onClick={() =>{\r\n                                     this.delete.current.value = null\r\n                                 }}\r\n                    />\r\n                    <Button type={\"primary\"} onClick={() => this.remove(this.delete.current.value)}> 删除</Button>\r\n\r\n                    <InputNumber max={99999} min={-9999} ref={this.find = React.createRef()}\r\n\r\n                                 onPressEnter={\r\n                                     (e) => this.get(this.find.current.value)\r\n                                 }\r\n                                 onClick={() =>{\r\n                                     this.find.current.value = null\r\n                                 }}\r\n                    />\r\n                    <Button type={\"primary\"} onClick={() => this.get(this.find.current.value)}> 查找</Button>\r\n\r\n                </Space>\r\n\r\n                <div style={{height: \"100%\", width: \"100%\", border: \"solid 1px\"}}>\r\n\r\n                    <Stage width={1500} height={900}>\r\n                        <Layer draggable>\r\n                            {this.dom()}\r\n                        </Layer>\r\n                    </Stage>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}","import CompanyList from \"../component/company/CompanyList\";\r\nimport CompanyDescriptions from \"../component/company/CompanyDescriptions\";\r\nimport CompanyDetail from \"../component/company/CompanyDetail\";\r\nimport BasicLayout from \"../layout/BasicLayout\";\r\nimport {FormOutlined, SendOutlined, SolutionOutlined, RadarChartOutlined} from \"@ant-design/icons\"\r\nimport React from \"react\";\r\nimport RedBlackTree from \"../component/treemap/RedBlackTree\";\r\n\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n\r\n    {\r\n        path: \"/ts\",\r\n        component:BasicLayout,\r\n        name:\"三分钟快速搭建CURD\",\r\n        routes: [\r\n            {\r\n                path: '/ts/companyList',\r\n                name: \"列表页\",\r\n                icon: <FormOutlined/>,\r\n                component: CompanyList,\r\n            },\r\n            {\r\n                path: '/ts/companyDetail',\r\n                name: \"详情页\",\r\n                exact: true,\r\n                icon: <SendOutlined/>,\r\n                component: CompanyDetail,\r\n            },\r\n            {\r\n                path: '/ts/companyDetail/:companyId',\r\n                component: CompanyDetail,\r\n            },\r\n            {\r\n                path: '/ts/companyDescriptions/:companyId',\r\n                name: \"明细页\",\r\n                icon: <SolutionOutlined/>,\r\n                component: CompanyDescriptions,\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        path:\"/gs\",\r\n        component:BasicLayout,\r\n        name:\"算法可视化\",\r\n        routes: [\r\n            {\r\n                path:\"/gs/redBlackTree\",\r\n                component:RedBlackTree,\r\n                name:\"红黑树\",\r\n                icon: <RadarChartOutlined/>\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: \"/\",\r\n        redirect:\"/gs/redBlackTree\",\r\n        component:BasicLayout,\r\n\r\n    },\r\n\r\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter} from \"react-router-dom\";\nimport {renderRoutes} from \"react-router-config\";\nimport routes from \"./config/router\"\n\n\n\n\nfunction App(){\n    return (\n        <React.Fragment>\n            {/*store 作为 Provider 的属性*/}\n            <BrowserRouter>\n                {renderRoutes(routes)}\n            </BrowserRouter>\n\n        </React.Fragment>\n    )\n}\n\nReactDOM.render(\n    < App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}